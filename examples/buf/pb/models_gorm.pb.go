// Code generated by protoc-gen-gorm. DO NOT EDIT.
// versions:
// 	protoc-gen-gorm 2.0.0
// 	protoc          (unknown)
// source: models.proto

package pb

import (
	sql "database/sql"
	_ "github.com/complex64/protoc-gen-gorm/gormpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	time "time"
)

// FileModel is the GORM model for pb.File.
type FileModel struct {
	Uuid    string       `gorm:"not null;unique;primaryKey"`
	Name    string       `gorm:"not null;index"`
	Bytes   int64        `gorm:"not null"`
	Created sql.NullTime `gorm:"not null;autoCreateTime;<-:create"`
	Updated sql.NullTime `gorm:"autoUpdateTime"`
}

// ToProto converts a FileModel to its protobuf representation.
func (m *FileModel) ToProto() (*File, error) {
	p := new(File)
	p.Uuid = m.Uuid
	p.Name = m.Name
	p.Bytes = m.Bytes
	if m.Created.Valid && m.Created.Time != (time.Time{}) {
		p.Created = timestamppb.New(m.Created.Time)
	}
	if m.Updated.Valid && m.Updated.Time != (time.Time{}) {
		p.Updated = timestamppb.New(m.Updated.Time)
	}
	return p, nil
}

// ToModel converts a File to its GORM model.
func (p *File) ToModel() (*FileModel, error) {
	m := new(FileModel)
	m.Uuid = p.Uuid
	m.Name = p.Name
	m.Bytes = p.Bytes
	if t := p.Created; t != nil {
		m.Created = sql.NullTime{
			Valid: true,
			Time:  t.AsTime(),
		}
	}
	if t := p.Updated; t != nil {
		m.Updated = sql.NullTime{
			Valid: true,
			Time:  t.AsTime(),
		}
	}
	return m, nil
}

func (m *FileModel) TableName() string {
	return "localfiles"
}
