// Code generated by protoc-gen-gorm. DO NOT EDIT.
// versions:
// 	protoc-gen-gorm 2.0.0
// 	protoc          (unknown)
// source: fieldtags/fieldtags.proto

package fieldtags

import (
	_ "github.com/complex64/protoc-gen-gorm/gormpb"
)

// OptionsModel is the GORM model for fieldtags.Options.
type OptionsModel struct {
	Column             string `gorm:"column:my_column"`
	NotNull            string `gorm:"not null"`
	Default            string `gorm:"default:value"`
	Unique             string `gorm:"unique"`
	PrimaryKey         string `gorm:"primaryKey"`
	DefaultIndex       string `gorm:"index"`
	NamedIndex         string `gorm:"index:my_index"`
	UniqueDefaultIndex string `gorm:"uniqueIndex"`
	UniqueNamedIndex   string `gorm:"uniqueIndex:my_unique_index"`
	AutoCreateTime     string `gorm:"autoCreateTime"`
	AutoUpdateTime     string `gorm:"autoUpdateTime"`
	Ignore             string `gorm:"-"`
}

// ToProto converts a OptionsModel to its protobuf representation.
func (m *OptionsModel) ToProto() (*Options, error) {
	p := new(Options)
	p.Column = m.Column
	p.NotNull = m.NotNull
	p.Default = m.Default
	p.Unique = m.Unique
	p.PrimaryKey = m.PrimaryKey
	p.DefaultIndex = m.DefaultIndex
	p.NamedIndex = m.NamedIndex
	p.UniqueDefaultIndex = m.UniqueDefaultIndex
	p.UniqueNamedIndex = m.UniqueNamedIndex
	p.AutoCreateTime = m.AutoCreateTime
	p.AutoUpdateTime = m.AutoUpdateTime
	p.Ignore = m.Ignore
	return p, nil
}

// ToModel converts a Options to its GORM model.
func (p *Options) ToModel() (*OptionsModel, error) {
	m := new(OptionsModel)
	m.Column = p.Column
	m.NotNull = p.NotNull
	m.Default = p.Default
	m.Unique = p.Unique
	m.PrimaryKey = p.PrimaryKey
	m.DefaultIndex = p.DefaultIndex
	m.NamedIndex = p.NamedIndex
	m.UniqueDefaultIndex = p.UniqueDefaultIndex
	m.UniqueNamedIndex = p.UniqueNamedIndex
	m.AutoCreateTime = p.AutoCreateTime
	m.AutoUpdateTime = p.AutoUpdateTime
	m.Ignore = p.Ignore
	return m, nil
}

// DenyOptionsModel is the GORM model for fieldtags.DenyOptions.
type DenyOptionsModel struct {
	Ignore     string `gorm:"-"`
	UpdateOnly string `gorm:"->:false;<-:update"`
	CreateOnly string `gorm:"->:false;<-:create"`
	WriteOnly  string `gorm:"->:false;<-"`
	ReadOnly   string `gorm:"->"`
	ReadUpdate string `gorm:"<-:update"`
	ReadCreate string `gorm:"<-:create"`
}

// ToProto converts a DenyOptionsModel to its protobuf representation.
func (m *DenyOptionsModel) ToProto() (*DenyOptions, error) {
	p := new(DenyOptions)
	p.Ignore = m.Ignore
	p.UpdateOnly = m.UpdateOnly
	p.CreateOnly = m.CreateOnly
	p.WriteOnly = m.WriteOnly
	p.ReadOnly = m.ReadOnly
	p.ReadUpdate = m.ReadUpdate
	p.ReadCreate = m.ReadCreate
	return p, nil
}

// ToModel converts a DenyOptions to its GORM model.
func (p *DenyOptions) ToModel() (*DenyOptionsModel, error) {
	m := new(DenyOptionsModel)
	m.Ignore = p.Ignore
	m.UpdateOnly = p.UpdateOnly
	m.CreateOnly = p.CreateOnly
	m.WriteOnly = p.WriteOnly
	m.ReadOnly = p.ReadOnly
	m.ReadUpdate = p.ReadUpdate
	m.ReadCreate = p.ReadCreate
	return m, nil
}
